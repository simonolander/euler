from sympy.ntheory import factorint
from numpy import ndindex


def r(n):
    ans = 0
    for i in range(n):
        ans = ans * 10 + 1
    return ans

# factors = {
#     11: {11: 1},
#     111: {3: 1, 37: 1},
#     1111: {11: 1, 101: 1},
#     11111: {41: 1, 271: 1},
#     111111: {3: 1, 7: 1, 11: 1, 13: 1, 37: 1},
#     1111111: {239: 1, 4649: 1},
#     11111111: {11: 1, 73: 1, 101: 1, 137: 1},
#     111111111: {3: 2, 37: 1, 333667: 1},
#     1111111111: {11: 1, 41: 1, 271: 1, 9091: 1},
#     11111111111: {21649: 1, 513239: 1},
#     1111111111111111111111: {11: 2, 23: 1, 4093: 1, 8779: 1, 21649: 1, 513239: 1},
#     11111111111111111111111111111111111111111111: {11: 2, 23: 1, 4093: 1, 8779: 1, 21649: 1, 513239: 1, 89: 1, 101: 1, 1056689261: 1, 1052788969: 1}
# }

primes = {25601, 11, 271, 17, 7019801, 1676321, 14103673319201, 41, 27961, 42051775804956304559810859008305819975199677041099230574273451704628125001, 976193, 19721061166646717498359681, 73, 182521213001, 78875943472201, 353, 101, 1680588011350901, 641, 1409, 9091, 19841, 834427406578561, 5070721, 137, 21401, 176144543406001, 5051, 449, 6187457, 60101, 1797655751, 5964848081, 3541, 69857, 751, 5882353, 251}

subsizes = sorted([2**e2*5**e5 for e2, e5 in ndindex(10, 10) if e2 or e5])

for size in subsizes:
    if len(primes) >= 40:
        break
    print(size)
    rr = r(size)
    for p in primes:
        while rr % p == 0:
            rr //= p
    if rr is not 1:
        new_primes = factorint(rr).keys()
        primes = primes.union(new_primes)
        print(primes)
